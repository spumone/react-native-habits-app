import { AuthProvider, useAuth } from "@/lib/auth-context";nimport { Stack, useRouter, useSegments } from "expo-router";nimport { useEffect } from "react";nimport { GestureHandlerRootView } from "react-native-gesture-handler";nimport { PaperProvider } from "react-native-paper";nimport { SafeAreaProvider } from "react-native-safe-area-context";nnfunction RouteGuard({children}: {children: React.ReactNode}){n  const router = useRouter();n  const segments = useSegments();n  const {user, isLoadingUser} = useAuth();n  n  useEffect(() => {n    const inAuthGroup = segments[0] === "auth" ? true : false;n    if (!user && !inAuthGroup && !isLoadingUser) {n      router.replace("/auth");n    } else if (user && inAuthGroup && !isLoadingUser) {n      router.replace("/");n    }n  }, [user, segments]);n  nn  return children;n}nnnexport default function RootLayout() {nn  return (n    <GestureHandlerRootView style={{ flex: 1 }}>n      <AuthProvider>n        <PaperProvider>n          <SafeAreaProvider>n            <RouteGuard>n              <Stack>n                <Stack.Screenn                  name="(tabs)"n                  options={{ title: "Home", headerShown: false }}n                />n              </Stack>n            </RouteGuard>n          </SafeAreaProvider>n        </PaperProvider>n      </AuthProvider>n    </GestureHandlerRootView>n  );n}