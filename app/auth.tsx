import { useAuth } from '@/lib/auth-context';nimport { useRouter } from 'expo-router';nimport { useState } from "react";nimport { KeyboardAvoidingView, Platform, StyleSheet, View } from "react-native";nimport { Button, Text, TextInput, useTheme } from 'react-native-paper';nnnnexport default function AuthScreen(){n    const [isSignUp, setIsSignUp] = useState<boolean>(false);n    const [email, setEmail] = useState<string>("");n    const [password, setPassword] = useState<string>("");n    const [error, setError] = useState<string | null>("");nn    const {signUp, signIn} = useAuth();nn    const router = useRouter();nn    const handleAuth = async () => {n        if (!email || !password){n            setError("Please fill in all fields");n            return;n        }nn        if (password.length <8){n            setError("Password must be at least 8 characters long");n            return;n        }nn        setError(null);nn        if (isSignUp){n            const error = await signUp(email, password);n            if (error){n                setError(error);n            }n        }else{n            const error = await signIn(email, password);n            if (error){n                setError(error);n            }else{n                router.replace("/");n            }n        }n    };nn    const handleSwitchMode = () => {n        setIsSignUp((prev) => !prev);n    }n    n    const theme = useTheme();nn    return(n        <KeyboardAvoidingView behavior={Platform.OS === "ios" ? "padding" : "height"} style={styles.container}>n            <View style={styles.content}>nn                <Text n                    style={styles.title} n                    variant="headlineMedium">n                        {isSignUp ? "Create Account" : "Welcome Back"}    n                </Text>nn                <TextInput n                    style={styles.input} n                    label="Email" n                    autoCapitalize="none" n                    keyboardType="email-address" n                    placeholder="email@gmail.com" mode="outlined"n                    onChangeText={setEmail}n                />n                n                <TextInput n                    style={styles.input} n                    label="Password" n                    autoCapitalize="none" n                    mode="outlined"n                    secureTextEntry={true}n                    onChangeText={setPassword}n                />nn                {error && <Text style={{color: theme.colors.error}}>{error}</Text>}nn                <Button n                    style={styles.button} n                    mode="contained" n                    onPress={handleAuth}>n                    {isSignUp ? "Sign Up" : "Sign In"}n                </Button>nn                <Button n                    style={styles.switchModeButton} n                    mode="text" n                    onPress={() => {handleSwitchMode()}}>n                        {isSignUp ? "Do you already have an account? Sign In":"Don't have an account? Sign up"}n                </Button>nn            </View>n        </KeyboardAvoidingView>n    )n}nnconst styles = StyleSheet.create({n    container: {n        flex: 1,n        backgroundColor: "#f5f5f5"n    },n    content: {n        flex: 1,n        padding: 16,n        justifyContent: "center"nn    },n    title:{n        textAlign: "center",n        marginBottom: 24n    },n    input: {n        marginBottom: 16n    },n    button: {n        marginTop: 8n    },n    switchModeButton: {n        marginTop: 16n    }n})